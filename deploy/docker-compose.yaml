version: '3.9'

services:
  frontend:
    image: sermalenk/skypro-front:lesson-38
    restart: on-failure
    depends_on:
      api:
        condition: service_started
      static:
        condition: service_completed_successfully
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - django_static:/usr/share/nginx/html/static/

  postgres:
    image: postgres:15.1-alpine
    volumes:
      - postgres_data_todo_app:/var/lib/postgresql/data
    env_file: .env
    restart: always
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_PASSWORD}
      interval: 5s
      timeout: 5s
      retries: 5

  migrations:
    image: ${DOCKER_USER}/todolist:latest
    env_file: .env
    command: python3 manage.py migrate
    depends_on:
      postgres:
        condition: service_healthy

  static:
    image: ${DOCKER_USER}/todolist:latest
    env_file: .env
    command: python3 manage.py collectstatic -c --no-input
    volumes:
      - django_static:/code/static/

  api:
    image: ${DOCKER_USER}/todolist:latest
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully

  bot:
    image: ${DOCKER_USER}/todolist:latest
    env_file: .env
    command: python3 manage.py runbot
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully

  redis:
    image: redis:7.0
    restart: always
    env_file: .env
    volumes:
      - redis_data:/data
    depends_on:
      postgres:
        condition: service_healthy
      api:
        condition: service_started

  celery:
    image: ${DOCKER_USER}/todolist:latest
    env_file: .env
    command: celery -A todolist worker -l info
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      api:
        condition: service_started

volumes:
  postgres_data_todo_app:
  django_static:
  redis_data: