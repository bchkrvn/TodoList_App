name: build and deploy workflow
on: [ push ]
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: clone code
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./api
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/todolist:latest
#      - name: docker build
#        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID ./api
#      - name: docker login
#        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
#      - name: docker push
#        run: docker push ${{ secrets.DOCKER_USERNAME }}/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: clone code
        uses: actions/checkout@v3
      - name: copy files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          source: "deploy/*"
          target: "docker"
          strip_components: 1
      - name: deploy app
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            cd docker
            docker-compose pull
            docker-compose down
            docker-compose up -d
      - name: clean up
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            docker system prune -f -a